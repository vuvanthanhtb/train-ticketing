version: '3.2'

networks:
  pre-event-network:
    driver: bridge

services:
  mysql:
    image: mysql:8.0
    container_name: pre-event-mysql
    volumes:
      - ./data/db_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d/
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--skip-character-set-client-handshake'  # Buộc tất cả kết nối sử dụng utf8mb4
    ]
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: ticket
      MYSQL_PASSWORD: root1234
    ports:
      - "3316:3306"
    networks:
      - pre-event-network

  #Redis
  redis:
    container_name: pre-event-redis
    image: redislabs/redismod:latest
    ports:
      - "6319:6379"
    networks:
      - pre-event-network

  prometheus:
    image: prom/prometheus:latest
    container_name: pre-event-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "9090:9090"
    networks:
      - pre-event-network

  grafana:
    image: grafana/grafana
    container_name: pre-event-grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SING_UP=false
      - GF_SERVER_DOMAIN=localhost
      #enable logger
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alermanager:debug ngalert:debug

    volumes:
      - ./grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - pre-event-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: pre-event-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    ports:
      - "9100:9100"
    networks:
      - pre-event-network

  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: pre-event-mysqld-exporter
    ports:
      - "9104:9104"
    command:
      - '--collect.engine_innodb_status'
      - '--collect.info_schema.processlist'
      - '--collect.info_schema.tables'
      - '--collect.info_schema.query_response_time'
      - '--collect.perf_schema.file_events'
      - '--collect.perf_schema.eventsstatements'
      - '--collect.perf_schema.indexiowaits'
      - '--collect.global_status'
      #      - '--ignore-tables'
      - '--config.my-cnf=/etc/mysql/.my.cnf'
    volumes:
      - ./mysqld-exporter/.my.cnf:/etc/mysql/.my.cnf
    environment:
      - DATA_SOURCE_NAME=root:root1234@tcp(mysql:3316)/
    depends_on:
      - mysql
    networks:
      - pre-event-network

  redis-exporter:
    image: oliver006/redis_exporter
    command: -redis.addr redis://redis:6379
    ports:
      - 9121:9121
    networks:
      - pre-event-network

  elasticsearch:
    image: elasticsearch:7.17.25
    container_name: pre-event-elasticsearch
    volumes:
      - ./elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
      - pre-event-network

  logstash:
    image: logstash:7.17.25
    container_name: pre-event-logstash
    volumes:
      - ./elk/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./elk/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
      - "5033:5000/tcp"
      - "5022:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - pre-event-network
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.17.25
    container_name: pre-event-kibana
    volumes:
      - ./elk/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - pre-event-network
    depends_on:
      - elasticsearch
